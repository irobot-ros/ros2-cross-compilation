
FROM ubuntu:20.04
LABEL maintainer="Alberto Soragna asoragna at irobot dot com"

# working directory
ENV HOME /root
WORKDIR $HOME

# create an empty .bashrc file
RUN touch $HOME/.bashrc
RUN > $HOME/.bashrc

# Set timezone otherwise tz will ask for it
ENV TZ=America/Los_Angeles
RUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone

# general utilities
RUN apt-get update && apt-get install -y \
  apt-utils \
  curl \
  nano \
  git \
  wget \
  software-properties-common \
  gnupg2 \
  vim

###### INSTALL ROS2 REQUIREMENTS

# Locale options
RUN apt-get install -y locales
RUN locale-gen en_US en_US.UTF-8
RUN update-locale LC_ALL=en_US.UTF-8 LANG=en_US.UTF-8
ENV LANG en_US.UTF-8

# Setup sources
RUN apt-get update && apt-get install -y curl gnupg2 lsb-release
RUN curl -sSL https://raw.githubusercontent.com/ros/rosdistro/master/ros.key -o /usr/share/keyrings/ros-archive-keyring.gpg
RUN echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/ros-archive-keyring.gpg] http://packages.ros.org/ros2/ubuntu $(. /etc/os-release && echo $UBUNTU_CODENAME) main" | tee /etc/apt/sources.list.d/ros2.list > /dev/null

# install development tools and ROS tools
RUN apt-get update && apt-get install -y \
  build-essential \
  cmake \
  python3-colcon-common-extensions \
  python3-rosdep \
  python3-pip \
  python3-dev \
  python3-numpy \
  ros-dev-tools

RUN pip3 install -U \
  argcomplete \
  git+https://github.com/lark-parser/lark.git \
  importlib-resources


###### ADDITIONAL SCRIPTS AND ENVIRONMENT VARIABLES

# TODO: investigate why this line is needed. It's the path where ament packages are installed.
# These packages are required when cross-compiling additional packages once the sysroot already contains the ROS2 SDK
# add the sysroot python modules to PYTHONPATH
RUN echo '  \n\
export PYTHONPATH=/root/sysroot/usr/lib/python3.10/site-packages/:$PYTHONPATH' >> $HOME/.bashrc

# TODO: here there is a terrible hack.
# we have problems when a package depends both on ROS2 SDK and on Python.
# For some reason if we specify here the path to the place where Python can be found on the sysroot everything works.
# However, we should use `:` as a delimiter, not `;`, but that does not work.
# set the AMENT_PREFIX_PATH to the sysroot
RUN echo '  \n\
export AMENT_PREFIX_PATH="/root/sysroot/usr;/root/sysroot/usr/bin"' >> $HOME/.bashrc

# copy the compilation scripts into the docker image
COPY compilation_scripts $HOME/compilation_scripts
